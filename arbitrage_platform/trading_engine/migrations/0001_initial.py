# Generated by Django 5.2.3 on 2025-06-20 22:54

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ArbitrageTradeAttempt",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "opportunity_details_json",
                    models.JSONField(
                        help_text="Snapshot of the arbitrage opportunity data at time of attempt"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("partially_completed", "Partially Completed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "start_amount_base_coin",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=19, null=True
                    ),
                ),
                (
                    "final_amount_base_coin",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=19, null=True
                    ),
                ),
                (
                    "calculated_profit",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=19, null=True
                    ),
                ),
                (
                    "actual_profit",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=19, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trade_attempts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TradeOrderLeg",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "leg_number",
                    models.PositiveSmallIntegerField(
                        help_text="Sequence number of this leg (1, 2, or 3)"
                    ),
                ),
                ("exchange_name", models.CharField(max_length=50)),
                ("pair", models.CharField(max_length=30)),
                (
                    "side",
                    models.CharField(
                        choices=[("BUY", "Buy"), ("SELL", "Sell")], max_length=4
                    ),
                ),
                (
                    "intended_quantity",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=19, null=True
                    ),
                ),
                (
                    "intended_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        help_text="Estimated price at calculation",
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "executed_quantity",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=19, null=True
                    ),
                ),
                (
                    "executed_price_avg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        help_text="Average fill price",
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "exchange_order_id",
                    models.CharField(
                        blank=True, db_index=True, max_length=255, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("new", "New"),
                            ("partially_filled", "Partially Filled"),
                            ("filled", "Filled"),
                            ("canceled", "Canceled"),
                            ("rejected", "Rejected"),
                            ("expired", "Expired"),
                            ("error", "Error"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "fee_amount",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=19, null=True
                    ),
                ),
                (
                    "fee_currency",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True,
                        help_text="Error message if the order leg failed",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "attempt",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="legs",
                        to="trading_engine.arbitragetradeattempt",
                    ),
                ),
            ],
            options={
                "ordering": ["attempt", "leg_number"],
                "unique_together": {("attempt", "leg_number")},
            },
        ),
    ]
